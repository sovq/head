var util = require("util");
var events = require("events");

function SsrSwitch(config,switchlog){
	this.name = config.name
	this.execString = config.buildExecString(config);
	this.switchlog = switchlog;
	
	this.status = function(origin){
		this.execSwitch("status",origin);
	};
	
	this.on = function(origin){			
		this.execSwitch("on",origin);
	};
	this.off = function(origin){
		this.execSwitch("off",origin);
	};
	
	this.connectionEventHandler=function(ConnectionEventArgs){
		this.execSwitch("status","connection status");
	};
	
	this.switchEventHandler=function(ConnectionEventArgs){
		var toggle = ConnectionEventArgs.lightState;
		this.execSwitch(toggle,"switch by web");
	};
	
	this.logdb=function(toggle, source){
		now = new Date();
		dateFormat = require('dateformat')
		var self = this;
		this.switchlog.insert({
			date: dateFormat(now, "yyyy-mm-dd, HH:MM:ss"), 
			toggle: toggle, 
			origin: source,
			ssr: self.name
		}, function (err) { });
	}
	
	this.execSwitch=function(toggle,source,sockets){
		console.log("socket");
		console.log("execSwitch source "+source)
		var my_command = this.execString + ' ' + toggle;
		console.log(my_command)
		var process = require('child_process');
		var self = this;
		var ls = process.exec(
					my_command,
					function(error, stdout, stderr){
					//	console.log("process source " + source)
						self.exec_cb(self, error, stdout, stderr, source);
					});
		ls.on('exit', function(code){ 
			//console.log(self.name+' switch exit code: '+ code);
		});
	};
	
	this.exec_cb=function(ssrSwitch, error, stdout, stderr, source, sockets){
		if (error) {
			 console.log(error.stack);
			 console.log('Error code: '+error.code);
			 console.log('Signal received: '+error.signal);
		}else{
			var lightState = stdout.trim()
			console.log("exec_cb source "+source)
			ssrSwitch.logdb(ssrSwitch.name, source);
			ssrSwitch.emit(ssrSwitch.name,lightState)
			console.log(ssrSwitch.name+' '+lightState)
			//console.log('stdout: ' + stdout);
			//console.log('stderr: ' + stderr);
			
		};
	};	
}

util.inherits(SsrSwitch, events.EventEmitter);
module.exports = SsrSwitch;
